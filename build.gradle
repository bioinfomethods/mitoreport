plugins {
  id "groovy"
  id "com.github.johnrengelman.shadow" version "6.0.0"
  id "application"
}

version "0.1"
group "au.edu.mcri.mitoreport"
defaultTasks 'build'

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  annotationProcessor "io.micronaut.configuration:micronaut-picocli"
  compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
  compileOnly "io.micronaut:micronaut-inject-groovy"
  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "io.micronaut:micronaut-runtime"
  implementation "io.micronaut:micronaut-runtime-groovy"
  implementation "io.micronaut:micronaut-validation"
  implementation "info.picocli:picocli"
  implementation "io.micronaut.configuration:micronaut-picocli"
  runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
  testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
  testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  testImplementation("org.spockframework:spock-core") {
    exclude group: "org.codehaus.groovy", module: "groovy-all"
  }
  testImplementation "io.micronaut:micronaut-inject-groovy"
  testImplementation "io.micronaut.test:micronaut-test-spock"
  testImplementation "io.micronaut.test:micronaut-test-junit5"

  implementation files('gngs/build/libs/groovy-ngs-utils.jar')

  // groovy-ngs-utils.jar is an uber jar with the following groovy modules.
  // Here we force upgrade the version.
  implementation "org.codehaus.groovy:groovy-all:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-ant:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-cli-commons:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-cli-picocli:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-groovydoc:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-json:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-sql:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-templates:$groovyVersion"
  implementation "org.codehaus.groovy:groovy-xml:$groovyVersion"
  implementation "org.codehaus.groovy:groovy:$groovyVersion"

  implementation "commons-io:commons-io:$commonsIoVersion"
}

test.classpath += configurations.developmentOnly

mainClassName = "au.edu.mcri.mitoreport.MitoReport"

// use JUnit 5 platform
test {
  useJUnitPlatform()
}

java {
  sourceCompatibility = JavaVersion.toVersion('1.8')
  targetCompatibility = JavaVersion.toVersion('1.8')
}

tasks.withType(GroovyCompile) {
  groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

shadowJar {
  mergeServiceFiles()
}

tasks.withType(JavaExec) {
  classpath += configurations.developmentOnly
  jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
  if (gradle.startParameter.continuous) {
    systemProperties(
      'micronaut.io.watch.restart': 'true',
      'micronaut.io.watch.enabled': 'true',
      "micronaut.io.watch.paths": "src/main"
    )
  }
}

String mitoOut = "${projectDir}/src/main/resources/mitoreport"
task cleanMitoOut(type: Delete) {
  delete mitoOut
}

task copyUiBuildToMitoOut(type: Copy, dependsOn: ['cleanMitoOut', ':ui:runBuild']) {
  group = 'build'
  description 'Copy UI build output into application resources'

  from project(':ui').getTasksByName('runBuild', false).first().outputs
  into mitoOut
}

shadowJar.configure {
  inputs.dir(mitoOut).withPropertyName('mitoOut')
}

task buildGngs(type: Exec) {
  group = 'build'
  description 'Build groovy-ngs-utils module dependency'
  workingDir './gngs'
  commandLine './gradlew', 'jar'

  inputs.dir('gngs').withPropertyName('gngs')
  outputs.file('gngs/build/libs/groovy-ngs-utils.jar').withPropertyName('gngsJar')
}

test.dependsOn += ['ui:runTestUnit']
check.dependsOn += ['ui:runLint']
assemble.dependsOn += ['buildGngs', 'copyUiBuildToMitoOut']
assemble.mustRunAfter 'check'
